---
name: stratisd nightly

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: 15 3 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  allowed_failures:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - task: make -f Makefile audit
            toolchain: 1.55.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
            components: cargo
          # Allowed because a failure may occur after a new Rust stable
          # version is released.
          - task: make -f Makefile clippy
            toolchain: stable
            components: clippy
    runs-on: ubuntu-18.04
    container:
      image: fedora:34  # CURRENT DEVELOPMENT ENVIRONMENT
      options: --privileged -v /dev:/dev
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          cryptsetup-devel
          dbus-devel
          libblkid-devel
          make
          openssl-devel
          python-requests
          python-semantic_version
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: ${{ matrix.components }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Test ${{ matrix.task }} on ${{ matrix.toolchain }} toolchain
        run: ${{ matrix.task }}

  # RPM building tasks, for testing
  packaging:
    runs-on: ubuntu-18.04
    container:
      image: fedora:34  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.55.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
      - name: Install dependencies
        run: dnf install -y findutils git make tar util-linux
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set release version
        run: >
          echo
          "RELEASE_VERSION=$(git describe --abbrev=0 | colrm 1 1)"
          >>
          $GITHUB_ENV
      - name: Make the tar file
        run: >
          RELEASE_VERSION=${{ env.RELEASE_VERSION }}
          make -f Makefile vendored-tar-file
      - name: Set name
        run: >
          echo
          "NAME=$(find . -name 'stratisd-*-vendor.tar.gz' -printf '%f\n')"
          >>
          $GITHUB_ENV
      - name: Set path
        run: >
          echo
          "PATH=$(find . -name 'stratisd-*-vendor.tar.gz')"
          >>
          $GITHUB_ENV
      - uses: actions/upload-artifact@v2
        with:
          name: ${{ env.NAME }}
          path: ${{ env.PATH }}

  checks-with-ci-repo:
    strategy:
      matrix:
        include:
          # yamllint disable rule:line-length
          - task: |
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../stratisd_proc_macros/Cargo.toml FEDORA_RELEASE=f34 make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../stratisd_proc_macros/Cargo.toml FEDORA_RELEASE=rawhide make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../Cargo.toml FEDORA_RELEASE=rawhide IGNORE_ARGS="--ignore-missing stratisd_proc_macros --ignore-missing libblkid-rs" make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../Cargo.toml FEDORA_RELEASE=f34 IGNORE_ARGS="--ignore-missing stratisd_proc_macros --ignore-missing libblkid-rs" make -f ../../Makefile check-fedora-versions
    runs-on: ubuntu-18.04
    container:
      image: fedora:34  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          cryptsetup-devel
          dbus-devel
          git
          libblkid-devel
          make
          openssl-devel
          python-requests
          python-semantic_version
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.55.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
          override: true
      - name: Check out ci repo
        run: git clone https://github.com/stratis-storage/ci.git
      - name: Run ${{ matrix.task }}
        run: ${{ matrix.task }}
        working-directory: ./ci/dependency_management
