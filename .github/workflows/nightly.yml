---
name: stratisd nightly

# yamllint disable-line rule:truthy
on:
  schedule:
    - cron: 15 3 * * *

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  allowed_failures:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - task: make -f Makefile audit
            toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
            components: cargo
          # Allowed because a failure may occur after a new Rust stable
          # version is released.
          - task: make -f Makefile clippy
            toolchain: stable
            components: clippy
          - task: cargo package
            toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
            components: cargo
    runs-on: ubuntu-18.04
    container:
      image: fedora:35  # CURRENT DEVELOPMENT ENVIRONMENT
      options: --privileged -v /dev:/dev
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          cryptsetup-devel
          dbus-devel
          libblkid-devel
          make
          openssl-devel
          python-requests
          python-semantic_version
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: ${{ matrix.components }}
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Test ${{ matrix.task }} on ${{ matrix.toolchain }} toolchain
        run: ${{ matrix.task }}

  checks-with-ci-repo:
    strategy:
      matrix:
        include:
          # yamllint disable rule:line-length
          - task: |
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../stratisd_proc_macros/Cargo.toml FEDORA_RELEASE=rawhide make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../stratisd_proc_macros/Cargo.toml FEDORA_RELEASE=f35 make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../Cargo.toml FEDORA_RELEASE=rawhide IGNORE_ARGS="--ignore-low clap" make -f ../../Makefile check-fedora-versions
              COMPARE_FEDORA_VERSIONS=./compare_fedora_versions MANIFEST_PATH=../../Cargo.toml FEDORA_RELEASE=f35 IGNORE_ARGS="--ignore-low clap" make -f ../../Makefile check-fedora-versions
    runs-on: ubuntu-18.04
    container:
      image: fedora:35  # CURRENT DEVELOPMENT ENVIRONMENT
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          cryptsetup-devel
          dbus-devel
          git
          libblkid-devel
          make
          openssl-devel
          python-requests
          python-semantic_version
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
          override: true
      - name: Check out ci repo
        run: git clone https://github.com/stratis-storage/ci.git
      - name: Run ${{ matrix.task }}
        run: ${{ matrix.task }}
        working-directory: ./ci/dependency_management

  legacy-audit-checks:
    continue-on-error: true
    strategy:
      matrix:
        include:
          - tag: v3.0.0
          - tag: v3.0.1
          - tag: v3.0.2
          - tag: v3.0.3
          - tag: v3.0.4
    runs-on: ubuntu-18.04
    container:
      image: fedora:35  # CURRENT DEVELOPMENT ENVIRONMENT
      options: --privileged -v /dev:/dev
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: tags/${{ matrix.tag }}
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          clang
          curl
          cryptsetup-devel
          dbus-devel
          libblkid-devel
          make
          openssl-devel
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
          override: true
      - name: Run audit task on ${{ matrix.tag }}
        run: make -f Makefile audit

  legacy-cli-checks:
    strategy:
      matrix:
        include:
          - image: fedora:35  # PINNED DEVELOPMENT ENVIRONMENT
            tag: v3.0.0
          - image: fedora:35  # PINNED DEVELOPMENT ENVIRONMENT
            tag: v3.0.1
    runs-on: ubuntu-18.04
    container: ${{ matrix.image }}
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          asciidoc
          clang
          cryptsetup-devel
          dbus-daemon
          dbus-tools
          dbus-devel
          libblkid-devel
          git
          make
          python3-coverage
          python3-dbus-client-gen
          python3-dbus-python-client-gen
          python3-justbytes
          python3-dateutil
          python3-packaging
          python3-psutil
          python3-wcwidth
          systemd-devel
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
          override: true
      - name: Build stratisd
        run: make -f Makefile install-debug
      - name: Check out stratis-cli
        run: git clone https://github.com/stratis-storage/stratis-cli.git
      - name: Checkout tag
        run: git checkout tags/${{ matrix.tag }} -b ${{ matrix.tag }}
        working-directory: ./stratis-cli
      - name: Set up for D-Bus
        run: |
          mkdir -p /var/lib/dbus
          dbus-uuidgen > /var/lib/dbus/machine-id
          mkdir -p /var/run/dbus
      - name: Start D-Bus
        run: >
          dbus-daemon
          --config-file=/usr/share/dbus-1/system.conf
          --print-address
      - name: Run stratis-cli tests
        run: >
          RUST_LOG=stratisd=debug
          STRATISD=/usr/libexec/stratisd
          PYTHONPATH=./src
          make dbus-tests
        working-directory: ./stratis-cli

  python-based-tests:
    strategy:
      matrix:
        include:
          - image: fedora:35  # CURRENT DEVELOPMENT ENVIRONMENT
            toolchain: 1.60.0  # CURRENT DEVELOPMENT RUST TOOLCHAIN
            skip_value: 0
          - image: fedora:34  # LOWEST DEVELOPMENT ENVIRONMENT
            toolchain: 1.54.0  # LOWEST SUPPORTED RUST TOOLCHAIN
            skip_value: 1
    runs-on: ubuntu-18.04
    container:
      image: ${{ matrix.image }}
      options: --privileged -v /dev:/dev
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies for Fedora
        run: >
          dnf install -y
          asciidoc
          clang
          cryptsetup-devel
          curl
          dbus-daemon
          dbus-devel
          dbus-tools
          device-mapper-persistent-data
          libblkid-devel
          make
          python3-dbus
          python3-dbus-client-gen
          python3-dbus-python-client-gen
          python3-psutil
          python3-pyudev
          systemd-devel
          systemd-udev
          xfsprogs
      - uses: actions-rs/toolchain@v1
        with:
          components: cargo
          toolchain: ${{ matrix.toolchain }}
          override: true
      - name: Install all necessary Stratis files
        run: make -f Makefile install-debug
      - name: Start udev
        run: /usr/lib/systemd/systemd-udevd &
      - name: Set up for D-Bus
        run: |
          mkdir -p /var/lib/dbus
          dbus-uuidgen > /var/lib/dbus/machine-id
          mkdir -p /var/run/dbus
      - name: Start D-Bus
        run: >
          dbus-daemon
          --config-file=/usr/share/dbus-1/system.conf
          --print-address
      - name: Tests on ${{ matrix.image }} using Rust ${{ matrix.toolchain }}
        run: >
          RUST_LOG=stratisd=debug
          STRATISD=/usr/libexec/stratisd
          STRATIS_PREDICT_USAGE=/usr/bin/stratis-predict-usage
          PYTHONPATH=./src
          make predict-tests
        working-directory: ./tests/client-dbus
